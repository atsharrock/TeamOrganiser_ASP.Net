@page
@model TeamOrganiser.IndexFootballersModel

@{
    ViewData["Title"] = "Footballers";
}

<h1>Footballers</h1>

<p>
    Edit your footballers here. The average rating for a specific role will be taken to give a score for that generic position.<br />
    For example, rating a players fullback position 90 and their wingback position 70, will result in a 80 (average) as a defensive rating.<br />
    Note: Rating all positions gives better results as this is used for a teams chemistry score.
</p>

<button class="btn-primary">Create game!</button>

<table class="table table-striped table-bordered" id="table_footballers">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FootballPlayer[0].FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FootballPlayer[0].LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FootballPlayer[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FootballPlayer[0].ContactNumber)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FootballPlayer[0].Rating)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FootballPlayer[0].Defence)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FootballPlayer[0].Midfield)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FootballPlayer[0].Attack)
            </th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.FootballPlayer)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Rating)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Defence)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Midfield)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Attack)
                </td>
                <td>
                    <button type="button" class="btn btn-info" data-toggle="modal" data-target="#editModal" onclick="loadEdit(@item.ID)">Edit</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@await Html.PartialAsync("~/Pages/Footballers/_EditFormModal.cshtml")
@await Html.PartialAsync("~/Pages/Shared/_SuccessModal.cshtml")
@await Html.PartialAsync("~/Pages/Shared/_ErrorModal.cshtml")

@section scripts {
    <script>

        function loadEdit(id) {
            $.getJSON("Footballers/Edit", { id: id }, function (data) {
                $('#inputEditID').val(id);
                $('#inputEditCentreBack').val(data.centreBack);
                $('#inputEditSweeper').val(data.sweeper);
                $('#inputEditFullBack').val(data.fullBack);
                $('#inputEditWingBack').val(data.wingBack);
                $('#inputEditCentreMidfield').val(data.centreMidfield);
                $('#inputEditDefensiveMidfield').val(data.defensiveMidfield);
                $('#inputEditAttackingMidfield').val(data.attackingMidfield);
                $('#inputEditWideMidfield').val(data.wideMidfield);
                $('#inputEditForward').val(data.forward);
                $('#inputEditCentreForward').val(data.centreForward);
                $('#inputEditWinger').val(data.winger);
            })
            .fail(function (xhr, status, error) {
                    var errorMessage = xhr.status + ': ' + xhr.statusText
                    console.log('Error - ' + errorMessage);
            })
        }

        function editModel() {
            $.post('Footballers/Edit', $('#editForm').serialize(), function (data) {
                $('#editModal').modal('toggle');
                if (data.substring(0, 5) !== "Error") {
                    $('#successModalMessage').text(data);
                    $('#success_tic').modal('toggle');

                    setTimeout(function () {
                        location.reload();
                    }, 2000);
                }
                else {
                    $('#errorModalMessage').text(data);
                    $('#errorModal').modal('toggle');
                }

            });
        }

        $(document).ready(function () {
            $('#table_footballers').dataTable();
        });

        function gettoken() {
            var token = '@Html.AntiForgeryToken()';
            token = $(token).val();
            return token;
        }

    </script>
}