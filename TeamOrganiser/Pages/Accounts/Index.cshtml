@page
@model TeamOrganiser.IndexModel


@{
    ViewData["Title"] = "Accounts";
}

<h1 class="display-4">Accounts</h1>

<medium class="text-muted">
    Manage accounts. Add another manager or coach.
</medium>

<div>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#createModal">
        Create New
    </button>
</div>
<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UserAccount[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserAccount[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserAccount[0].AccountType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserAccount[0].Password)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.UserAccount)
        {

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AccountType)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Password)
                </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.ID">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.ID">Details</a> |
                    <a asp-page="./Delete" asp-route-id="@item.ID">Delete</a>
                    <!-- Trigger the modal with a button -->
                    @await Html.PartialAsync("~/Pages/Accounts/_FormModal.cshtml", @item)
                    <button type="button" class="btn btn-default" data-toggle="modal" data-target="#editModal" onclick="loadEdit(@item.ID)">Edit</button>
                </td>
            </tr>
        }

    </tbody>
</table>




@section scripts{
    <script>

        function loadEdit(id) {
            $.getJSON("Accounts/Edit", { id: id }, function (data) {
                event.preventDefault();
                $('#inputName').val(data.name);
                $('#inputEmail').val(data.email);
                $('#inputPassword').val(data.password);
                $('#inputAccount').val(data.accountType);
            })
            .fail(function (xhr, status, error) {
                var errorMessage = xhr.status + ': ' + xhr.statusText
                console.log('Error - ' + errorMessage);
            })
        }

        function edit(id) {
            var form = $('#editForm');
            var arrayData = $(form).serializeArray();
            var data = JSON.stringify(arrayData);
            
            $.post('Accounts/Edit', $( "#editForm" ).serialize(), function (data) {
                console.log(data);
            });
            /*
            event.preventDefault();
            var form = $('#editForm');
            var jsonData = {};
            $.each($(form).serializeArray(), function() {
              jsonData[this.name] = this.value;
            });
            var data = JSON.stringify(jsonData);
            $.ajax({
              url: 'Accounts/Edit',
              type: 'POST',
              contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
              dataType: 'json',
              data: data,
              success: function(data) {
                  var jsonResult = JSON.stringify(data);
                  console.log(jsonResult);
              }
            });
            */
        }

    </script>
}